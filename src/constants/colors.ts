import type { FontSize } from '../types';

import { cva } from 'class-variance-authority';

export const TAILWIND_COLOR_VARIANTS = [
  'gray',
  'red',
  'orange',
  'amber',
  'yellow',
  'lime',
  'green',
  'emerald',
  'teal',
  'cyan',
  'sky',
  'blue',
  'indigo',
  'violet',
  'purple',
  'fuchsia',
  'pink',
  'rose',
] as const;

export const COLOR_VARIANTS = ['primary', 'secondary', 'tertiary', 'info', 'success', 'warning', 'danger'] as const;

export type TailwindColorVariant = (typeof TAILWIND_COLOR_VARIANTS)[number];
export type ColorVariant = (typeof COLOR_VARIANTS)[number];

export const ALL_COLOR_VARIANTS = [...TAILWIND_COLOR_VARIANTS, ...COLOR_VARIANTS] as const;
export type AllColorVariant = (typeof ALL_COLOR_VARIANTS)[number];

export const BOX_COLOR_VARIANTS = [
  ...ALL_COLOR_VARIANTS,
  'muted',
  'black',
  'white',
  'transparent',
  'background',
  'foreground',
  'inherit',
  'currentColor',
  'dimmed',
] as const;
export type BoxColorVariant = (typeof BOX_COLOR_VARIANTS)[number];

export const tailwindBoxVariants = cva<{
  bg: Record<BoxColorVariant, string>;
  color: Record<BoxColorVariant, string>;
  borderColor: Record<BoxColorVariant, string>;
  size: Record<keyof FontSize, string>;
}>('', {
  variants: {
    bg: {
      gray: 'bg-gray-600',
      red: 'bg-red-600',
      orange: 'bg-orange-600',
      amber: 'bg-amber-600',
      yellow: 'bg-yellow-600',
      lime: 'bg-lime-600',
      green: 'bg-green-600',
      emerald: 'bg-emerald-600',
      teal: 'bg-teal-600',
      cyan: 'bg-cyan-600',
      sky: 'bg-sky-600',
      blue: 'bg-blue-600',
      indigo: 'bg-indigo-600',
      violet: 'bg-violet-600',
      purple: 'bg-purple-600',
      fuchsia: 'bg-fuchsia-600',
      pink: 'bg-pink-600',
      rose: 'bg-rose-600',
      black: 'bg-black',
      white: 'bg-white',
      transparent: 'bg-transparent',
      background: 'bg-background',
      foreground: 'bg-foreground',
      inherit: 'bg-inherit',
      primary: 'bg-primary',
      secondary: 'bg-secondary',
      tertiary: 'bg-tertiary',
      info: 'bg-info',
      success: 'bg-success',
      warning: 'bg-warning',
      danger: 'bg-danger',
      muted: 'bg-muted',
      currentColor: 'bg-current',
      dimmed: 'bg-gray-500',
    },
    color: {
      gray: 'text-gray-600',
      red: 'text-red-600',
      orange: 'text-orange-600',
      amber: 'text-amber-600',
      yellow: 'text-yellow-600',
      lime: 'text-lime-600',
      green: 'text-green-600',
      emerald: 'text-emerald-600',
      teal: 'text-teal-600',
      cyan: 'text-cyan-600',
      sky: 'text-sky-600',
      blue: 'text-blue-600',
      indigo: 'text-indigo-600',
      violet: 'text-violet-600',
      purple: 'text-purple-600',
      fuchsia: 'text-fuchsia-600',
      pink: 'text-pink-600',
      rose: 'text-rose-600',
      black: 'text-black',
      white: 'text-white',
      transparent: 'text-transparent',
      background: 'text-background',
      foreground: 'text-foreground',
      inherit: 'text-inherit',
      primary: 'text-primary',
      secondary: 'text-secondary',
      tertiary: 'text-tertiary',
      info: 'text-info',
      success: 'text-success',
      warning: 'text-warning',
      danger: 'text-danger',
      muted: 'text-muted',
      currentColor: 'text-current',
      dimmed: 'text-gray-500',
    },
    borderColor: {
      gray: 'border-gray-600',
      red: 'border-red-600',
      orange: 'border-orange-600',
      amber: 'border-amber-600',
      yellow: 'border-yellow-600',
      lime: 'border-lime-600',
      green: 'border-green-600',
      emerald: 'border-emerald-600',
      teal: 'border-teal-600',
      cyan: 'border-cyan-600',
      sky: 'border-sky-600',
      blue: 'border-blue-600',
      indigo: 'border-indigo-600',
      violet: 'border-violet-600',
      purple: 'border-purple-600',
      fuchsia: 'border-fuchsia-600',
      pink: 'border-pink-600',
      rose: 'border-rose-600',
      black: 'border-black',
      white: 'border-white',
      transparent: 'border-transparent',
      background: 'border-background',
      foreground: 'border-foreground',
      inherit: 'border-inherit',
      primary: 'border-primary',
      secondary: 'border-secondary',
      tertiary: 'border-tertiary',
      info: 'border-info',
      success: 'border-success',
      warning: 'border-warning',
      danger: 'border-danger',
      muted: 'border-muted',
      currentColor: 'border-current',
      dimmed: 'border-gray-500',
    },
    size: {
      xs: 'text-xs',
      '2xs': 'text-2xs',
      '3xs': 'text-3xs',
      tiny: 'text-tiny',
      sm: 'text-sm',
      base: 'text-base',
      lg: 'text-lg',
      xl: 'text-xl',
      '2xl': 'text-2xl',
      '3xl': 'text-3xl',
      '4xl': 'text-4xl',
      '5xl': 'text-5xl',
      '6xl': 'text-6xl',
      '7xl': 'text-7xl',
      '8xl': 'text-8xl',
      '9xl': 'text-9xl',
    },
  },
  defaultVariants: {},
});
